{"version":3,"file":"static/js/52.9d340d40.chunk.js","mappings":"iNAeMA,EAAeC,EAAAA,GAAAA,OAAH,qHACP,SAACC,GAAD,OAA8B,IAAlBA,EAAMC,QAAgB,OAAS,UAChC,SAACD,GAAD,OAA8B,IAAlBA,EAAMC,QAAgB,UAAY,aAC7C,SAACD,GAAD,OAAWA,EAAMC,WACnB,SAACD,GAAD,OAAWA,EAAMC,QAAU,KAE1CC,EAAgBH,EAAAA,GAAAA,QAAH,4IAObI,EAAgBJ,EAAAA,GAAAA,QAAH,8FAKbK,EAAaL,EAAAA,GAAAA,KAAH,kEAIVM,EAAcN,EAAAA,GAAAA,MAAH,mPAKK,SAACC,GAAD,OAAYA,EAAMM,MAAQ,MAAQ,WASlDC,EAAeR,EAAAA,GAAAA,OAAH,kPAcZS,EAAiBT,EAAAA,GAAAA,SAAH,iPAcdU,EAASV,EAAAA,GAAAA,MAAH,6IAMR,SAACC,GAAD,OACAA,EAAMU,OACF,6DACA,MAEFC,EAAaZ,EAAAA,GAAAA,IAAH,wEAIVa,EAAOb,EAAAA,GAAAA,MAAH,iOAEY,SAACC,GAAD,OAAYA,EAAMa,SAAW,UAAY,aASzDC,EAAKf,EAAAA,GAAAA,GAAH,6FAKKgB,EAAO,SAACf,GAAD,OAClB,SAACE,EAAD,WACE,SAACC,EAAD,WACE,UAACC,EAAD,CAAYY,SAAUhB,EAAMiB,YAA5B,WACE,SAACH,EAAD,0FACA,UAACH,EAAD,YACE,SAACN,EAAD,CACEC,MAAsB,KAAfN,EAAMkB,KACbC,GAAI,OACJC,MAAOpB,EAAMkB,KACbG,SAAU,SAACC,GACTtB,EAAMuB,QAAQD,EAAEE,OAAOJ,QAEzBK,UAAQ,IAGM,KAAfzB,EAAMkB,MACL,SAACN,EAAD,CAAMc,QAAQ,SAASb,UAAU,EAAjC,qBAIA,SAACD,EAAD,CAAMc,QAAQ,SAASb,UAAU,EAAjC,gBAIF,SAACJ,EAAD,CAAQC,OAAuB,KAAfV,EAAMkB,KAAaC,GAAG,aAAaO,QAAQ,OAA3D,6JAIF,UAACf,EAAD,YACE,SAACN,EAAD,CACEC,OAAQN,EAAM2B,MAAMC,SAAS,KAC7BT,GAAI,QACJC,MAAOpB,EAAM2B,MACbN,SAAU,SAACC,GACTtB,EAAM6B,SAASP,EAAEE,OAAOJ,QAE1BU,KAAK,QACLL,UAAQ,IAGTzB,EAAM2B,MAAMC,SAAS,MACpB,SAAChB,EAAD,CAAMc,QAAQ,QAAQb,UAAU,EAAhC,qBAIA,SAACD,EAAD,CAAMc,QAAQ,SAASb,UAAU,EAAjC,gBAIF,SAACJ,EAAD,CAAQC,OAAwB,KAAhBV,EAAM2B,MAAcR,GAAG,cAAcO,QAAQ,QAA7D,sFAIF,SAACnB,EAAD,CACEc,SAAU,SAACC,GACTtB,EAAM+B,SAAST,EAAEE,OAAOJ,QAE1BA,MAAOpB,EAAMgC,MACbP,UAAQ,EALV,SAOGzB,EAAMiC,WAET,SAACzB,EAAD,CACEY,MAAOpB,EAAMkC,QACbb,SAAU,SAACC,GACTtB,EAAMmC,WAAWb,EAAEE,OAAOJ,QAE5BF,KAAK,GACLC,GAAG,GACHiB,YAAY,uGAEd,SAACtC,EAAD,CAAcG,QAAS,EAAG6B,KAAM,SAAUO,QAASrC,EAAMsC,aAAzD,+DAGA,SAACxC,EAAD,CAAcG,QAAS,EAAG6B,KAAM,SAAhC,4E,2BCnIR,GAFsBS,EAAAA,EAAAA,KA7CT,SAACC,GAAD,MAAuB,CAClCtB,KAAMsB,EAAMtB,KACZS,MAAOa,EAAMb,MACbO,QAASM,EAAMN,QACfF,MAAOQ,EAAMR,SAyCqB,CAAES,aAAcC,EAAAA,EAAAA,kBAC9BC,EAvCL,SAAC3C,GAChB,IAAM4C,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS9C,EAAMkB,MAAvC,eAAOA,EAAP,KAAaK,EAAb,KACA,GAA0BuB,EAAAA,EAAAA,UAAS9C,EAAM2B,OAAzC,eAAOA,EAAP,KAAcE,EAAd,KACA,GAA8BiB,EAAAA,EAAAA,UAAS9C,EAAMkC,SAA7C,eAAOA,EAAP,KAAgBC,EAAhB,KACA,GAA0BW,EAAAA,EAAAA,UAAS9C,EAAMgC,OAAzC,eAAOA,EAAP,KAAcD,EAAd,KAYME,EADS,CAAC,4BAAS,4BAAS,4BAAS,6BACpBc,KAAI,SAACzB,EAAG0B,GAAJ,OACzB,mBAAgB5B,MAAOE,EAAvB,SACGA,GADU0B,MAIf,OACE,SAACjC,EAAD,CACEiB,MAAOA,EACPd,KAAMA,EACNS,MAAOA,EACPO,QAASA,EACTL,SAAUA,EACVM,WAAYA,EACZZ,QAASA,EACTQ,SAAUA,EACVd,YA1BgB,WAClBjB,EAAMyC,aAAavB,EAAMS,EAAOK,EAAOE,GACvCU,EAAS,MAyBPN,aAvBiB,WACnBf,EAAQ,IACRM,EAAS,IACTM,EAAW,IACXJ,EAAS,8BAoBPE,QAASA","sources":["components/form/form.tsx","components/form/formContainer.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\ntype propsType = {\n  name: string;\n  email: string;\n  theme: string;\n  message: string;\n  sendHandler: () => void;\n  resetHandler: () => void;\n  setName: (name: string) => void;\n  setEmail: (email: string) => void;\n  setTheme: (theme: string) => void;\n  setMessage: (Message: string) => void;\n  options: Array<JSX.Element>;\n};\nconst StyledButton = styled.button<{ buttPos: number }>`\n  width: ${(props) => (props.buttPos === 1 ? \"11vw\" : \"18vw\")};\n  background-color: ${(props) => (props.buttPos === 1 ? \"#BDBDBD\" : \"#13C98A\")};\n  grid-column-start: ${(props) => props.buttPos};\n  grid-column-end: ${(props) => props.buttPos + 1};\n`;\nconst StyledSection = styled.section`\n  background-color: #474747;\n  height: 88vh;\n  display: block;\n  position: relative;\n  padding: 12vh 0 0 30vw;\n`;\nconst StyledArticle = styled.article`\n  width: fit-content;\n  background-color: white;\n  padding: 4vmin;\n`;\nconst StyledForm = styled.form`\n  display: grid;\n  grid-row-gap: 2.3vh;\n`;\nconst StyledInput = styled.input<{ isErr: boolean }>`\n  height: 7vh;\n  width: 30vw;\n  padding: 1vh 0 0 1vw;\n  border-radius: 6px;\n  border: 2px solid ${(props) => (props.isErr ? \"red\" : \"green\")};\n  font-size: 2vmin;\n  outline: none;\n  &&:hover,\n  &&:focus,\n  &&:active {\n    border-color: #c0bad5;\n  }\n`;\nconst StyledSelect = styled.select`\n  height: 8vh;\n  font-size: 2vmin;\n  width: 30.5vw;\n  border-radius: 6px;\n  grid-column-start: 1;\n  grid-column-end: 3;\n  outline: none;\n  &&:hover,\n  &&:focus,\n  &&:active {\n    border-color: #c0bad5;\n  }\n`;\nconst StyledTextarea = styled.textarea`\n  height: 14vh;\n  width: 30vw;\n  font-size: 2vmin;\n  border-radius: 6px;\n  grid-column-start: 1;\n  grid-column-end: 3;\n  outline: none;\n  &&:hover,\n  &&:focus,\n  &&:active {\n    border-color: #c0bad5;\n  }\n`;\nconst Before = styled.label<{ isFill: boolean }>`\n  position: absolute;\n  margin-top: 3.3vh;\n  margin-left: -30vw;\n  transition: 0.2s ease;\n  color: grey;\n  ${(props) =>\n    props.isFill\n      ? \"font-size: 1.6vmin; margin-left: -30.3vw; margin-top: 1vh;\"\n      : \"\"}\n`;\nconst InputBlock = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 3;\n`;\nconst Icon = styled.label<{ isValide: boolean }>`\n  position: absolute;\n  background-color: ${(props) => (props.isValide ? \"#13C98A\" : \"#F8478D\")};\n  border-radius: 5vmin;\n  width: 3.5vmin;\n  height: 3.5vmin;\n  margin: 2.4vh 0 0 -3vw;\n  text-align: center;\n  font-size: 3vmin;\n  color: white;\n`;\nconst H1 = styled.h1`\n  font-size: 3vmin;\n  grid-column-start: 1;\n  grid-column-end: 3;\n`;\nexport const Form = (props: propsType) => (\n  <StyledSection>\n    <StyledArticle>\n      <StyledForm onSubmit={props.sendHandler}>\n        <H1>Форма для тебя</H1>\n        <InputBlock>\n          <StyledInput\n            isErr={props.name === \"\"}\n            id={\"name\"}\n            value={props.name}\n            onChange={(e) => {\n              props.setName(e.target.value);\n            }}\n            required\n          />\n\n          {props.name !== \"\" ? (\n            <Icon htmlFor=\"before\" isValide={true}>\n              ✓\n            </Icon>\n          ) : (\n            <Icon htmlFor=\"before\" isValide={false}>\n              !\n            </Icon>\n          )}\n          <Before isFill={props.name !== \"\"} id=\"beforeName\" htmlFor=\"name\">\n            Представьтесь пожалуйста\n          </Before>\n        </InputBlock>\n        <InputBlock>\n          <StyledInput\n            isErr={!props.email.includes(\"@\")}\n            id={\"email\"}\n            value={props.email}\n            onChange={(e) => {\n              props.setEmail(e.target.value);\n            }}\n            type=\"email\"\n            required\n          />\n\n          {props.email.includes(\"@\") ? (\n            <Icon htmlFor=\"email\" isValide={true}>\n              ✓\n            </Icon>\n          ) : (\n            <Icon htmlFor=\"before\" isValide={false}>\n              !\n            </Icon>\n          )}\n          <Before isFill={props.email !== \"\"} id=\"beforeEmail\" htmlFor=\"email\">\n            Введите ваш e-mail\n          </Before>\n        </InputBlock>\n        <StyledSelect\n          onChange={(e) => {\n            props.setTheme(e.target.value);\n          }}\n          value={props.theme}\n          required\n        >\n          {props.options}\n        </StyledSelect>\n        <StyledTextarea\n          value={props.message}\n          onChange={(e) => {\n            props.setMessage(e.target.value);\n          }}\n          name=\"\"\n          id=\"\"\n          placeholder=\"Введите сообщение\"\n        />\n        <StyledButton buttPos={1} type={\"button\"} onClick={props.resetHandler}>\n          Сбросить\n        </StyledButton>\n        <StyledButton buttPos={2} type={\"submit\"}>\n          Отправить\n        </StyledButton>\n      </StyledForm>\n    </StyledArticle>\n  </StyledSection>\n);\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { storeType } from \"../../store/store\";\nimport { Form } from \"./form\";\nimport { useState } from \"react\";\nimport { actions } from \"../../store/mainReducer\";\nimport { useNavigate } from \"react-router-dom\";\ntype propsType = ConnectedProps<typeof formConnector>;\nconst MSTP = (state: storeType) => ({\n  name: state.name,\n  email: state.email,\n  message: state.message,\n  theme: state.theme,\n});\n\nconst WithForm = (props: propsType) => {\n  const navigate = useNavigate();\n  const [name, setName] = useState(props.name);\n  const [email, setEmail] = useState(props.email);\n  const [message, setMessage] = useState(props.message);\n  const [theme, setTheme] = useState(props.theme);\n  const sendHandler = () => {\n    props.changeFormAC(name, email, theme, message);\n    navigate(\"/\");\n  };\n  const resetHandler = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n    setTheme(\"Тема1\");\n  };\n  const themes = [\"Тема1\", \"Тема2\", \"Тема3\", \"Тема4\"];\n  const options = themes.map((e, i) => (\n    <option key={i} value={e}>\n      {e}\n    </option>\n  ));\n  return (\n    <Form\n      theme={theme}\n      name={name}\n      email={email}\n      message={message}\n      setEmail={setEmail}\n      setMessage={setMessage}\n      setName={setName}\n      setTheme={setTheme}\n      sendHandler={sendHandler}\n      resetHandler={resetHandler}\n      options={options}\n    />\n  );\n};\nconst formConnector = connect(MSTP, { changeFormAC: actions.changeFormDataAC });\nconst FormContainer = formConnector(WithForm);\nexport default FormContainer;\n"],"names":["StyledButton","styled","props","buttPos","StyledSection","StyledArticle","StyledForm","StyledInput","isErr","StyledSelect","StyledTextarea","Before","isFill","InputBlock","Icon","isValide","H1","Form","onSubmit","sendHandler","name","id","value","onChange","e","setName","target","required","htmlFor","email","includes","setEmail","type","setTheme","theme","options","message","setMessage","placeholder","onClick","resetHandler","connect","state","changeFormAC","actions","formConnector","navigate","useNavigate","useState","map","i"],"sourceRoot":""}